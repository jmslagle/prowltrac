[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prowltrac"
version = "1.0.0"
authors = [
    {name = "PlexTrac Integration", email = "noreply@example.com"},
]
description = "Import Prowler OCSF findings into PlexTrac"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["security", "plextrac", "prowler", "ocsf", "vulnerability", "compliance"]

dependencies = [
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    "python-dateutil>=2.8.0",
    "cryptography>=41.0.0",
    "simple-term-menu>=1.6.0",
]

[project.optional-dependencies]
ocsf = [
    "py-ocsf-models>=0.5.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]
all = [
    "prowltrac[ocsf,dev]",
]

# No scripts defined - run menu_import.py or simple_import.py directly

[project.urls]
Homepage = "https://github.com/jmslagle/prowltrac"
Documentation = "https://github.com/jmslagle/prowltrac#readme"
Repository = "https://github.com/jmslagle/prowltrac.git"
"Bug Tracker" = "https://github.com/jmslagle/prowltrac/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

# No package data needed

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "py_ocsf_models.*",
    "simple_term_menu.*",
]
ignore_missing_imports = true

# Flake8 configuration (in setup.cfg format, but documented here)
# [flake8]
# max-line-length = 100
# extend-ignore = E203, W503
# exclude = .git,__pycache__,build,dist,.venv